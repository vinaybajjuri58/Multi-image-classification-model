# -*- coding: utf-8 -*-
"""MNIST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CQ2sJGcqWuAjfcf8ujcVwKTzr1grmuq9
"""

from keras import layers
from keras.datasets import mnist

import numpy as np

(train_images,train_label),(test_images,test_label)=mnist.load_data()

from keras import models
from keras import layers

train_images=train_images.reshape((60000,28*28))
test_images=test_images.reshape((10000,28*28))

model=models.Sequential()
model.add(layers.Dense(512,activation='relu',input_shape=(28*28,)))
model.add(layers.Dense(256,activation='relu'))
model.add(layers.Dense(10,activation='softmax'))

model.compile(
    loss='categorical_crossentropy',
    optimizer='adam',
    metrics=['accuracy']
)

train_images=train_images.astype('float32')/255
test_images=test_images.astype('float32')/255

from keras.utils import to_categorical
train_label=to_categorical(train_label)
test_label=to_categorical(test_label)

model.fit(train_images,train_label,epochs=5,batch_size=128)

test_loss,test_accuracy=model.evaluate(test_images,test_label)

print('test_accuracy'+str(test_accuracy))
print('test_loss'+str(test_loss))

